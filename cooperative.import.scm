;;;; cooperative.import.scm - GENERATED BY CHICKEN 4.10.0 -*- Scheme -*-

(eval '(import chicken scheme))
(##sys#register-compiled-module
  'cooperative
  (list)
  '((make-coroutine . cooperative#make-coroutine)
    (in-coroutine? . cooperative#in-coroutine?)
    (yield! . cooperative#yield!))
  (list (cons 'fsm
              (syntax-rules
                (input: vars: start: state: act: trans: output:)
                ((fsm input:
                      (input ...)
                      vars:
                      vars
                      start:
                      initial-state
                      (state:
                        state-name
                        act:
                        act
                        output:
                        (output ...)
                        trans:
                        ((pred next-state) ...))
                      ...)
                 (let vars (let
                            ((state 'initial-state))
                            (lambda args
                              (receive
                                (input ...)
                                (apply values args)
                                (case state
                                  ((state-name)
                                   (begin
                                     act
                                     (cond (pred (set! state 'next-state)) ...)
                                     (list output ...)))
                                  ...)))))))))
  (list))

;; END OF FILE
